1. Thinking in react
2. 1 + модули es6 + webpack + index.js
3. 2 + сомодельный flux
4. 3 + простейший набор redux
5. 4 + devtools
6. 5 + middleware
7. 6 + socket.io


//Thinking in react

1. Обвести все области/подобласти в макете по принципам единой ответственности и применяя декомпозицию

2. Дать всем областям имена
- FilterableProductTable: включает весь пример
- SearchBar: поле ввода
- ProductTable: отображает таблицу с данными
- ProductCategoryRow: отображает заголовок для каждой категории
- ProductRow: отображает запись с данными

3. Составить иерархический список всех компонентов, состоящих из областей
- FilterableProductTable
--- SearchBar
--- ProductTable
------ ProductCategoryRow
------ ProductRow

4. Написать статическую версию реакт приложения 
- компоненты должны содержать только метод render()
- верхний родительский компонент получит модель данных в качестве свойства (props)
- если внести изменения в базовую модель данных и вызвать ReactDOM.render() заново - UI обновится
- React - предоставляет однопоточный процесс обновления данных

5. Отличия props от state
props - способ передачи ранных от родительского компонента в дочерний
state - зарезервирован для интерактивности - для данных, которые меняются с течением времени
https://facebook.github.io/react/docs/state-and-lifecycle.html

6. Способы построения
top-down - Сверху вниз - начать с разработки компонента всего приложения - для простых приложений
bottom-up - Снизу вверх - начать с компонентов, которые находятся внутри родительского компонента - для сложных приложений

TODO
- законспектировать статью про state
- Добавить минимальный список state
- 
